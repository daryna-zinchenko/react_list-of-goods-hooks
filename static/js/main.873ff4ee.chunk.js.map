{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","handleSort","SortOption","setState","handleReverse","handleReset","this","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAsBzB,OApBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,WAAa,SAACC,GACZ,OAAQA,GACN,KAAKrB,EAASU,SACZ,EAAKY,SAAS,CAAElB,SAAUJ,EAASU,WACnC,MAEF,KAAKV,EAASY,OACZ,EAAKU,SAAS,CAAElB,SAAUJ,EAASY,WAb3C,EAqBEW,cAAgB,WACd,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBb,YAAaa,EAAMb,gBAvBzB,EA2BEmB,YAAc,WACZ,EAAKF,SAAS,CACZjB,YAAY,EACZD,SAAUJ,EAASmB,QA9BzB,4CAkCE,WAAU,IAAD,OACP,EAAiCM,KAAKP,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,kBAAD,OAAmBxB,IAAaJ,EAASU,SAAW,WAAa,KAC9EmB,QAAS,kBAAM,EAAKT,WAAWpB,EAASU,WAH1C,iCAQA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,qBAAD,OAAsBxB,IAAaJ,EAASY,OAAS,WAAa,KAC/EiB,QAAS,kBAAM,EAAKT,WAAWpB,EAASY,SAH1C,4BAQA,wBACEe,KAAK,SACLD,UAAWE,IAAG,qBAAD,OAAuBvB,EAA0B,GAAb,aACjDwB,QAAS,kBAAM,EAAKN,iBAHtB,sBAQEnB,IAAaJ,EAASmB,MAAQd,IAC9B,wBACEsB,KAAK,SACLD,UAAWE,IAAG,6BACdC,QAAS,kBAAM,EAAKL,eAHtB,sBAUJ,6BACGtB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CyB,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAAgCA,GAAvBA,eA7ElC,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.873ff4ee.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (SortOption: SortType) => {\n    switch (SortOption) {\n      case SortType.ALPHABET:\n        this.setState({ sortType: SortType.ALPHABET });\n        break;\n\n      case SortType.LENGTH:\n        this.setState({ sortType: SortType.LENGTH });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`)}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`)}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(`button is-warning ${!isReversed ? 'is-light' : ''}`)}\n            onClick={() => this.handleReverse()}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className={cn('button is-danger is-light')}\n              onClick={() => this.handleReset()}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => <li key={good} data-cy=\"Good\">{ good }</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}